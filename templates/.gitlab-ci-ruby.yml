stages:
  - test
  - chatops

test:
  image: circleci/ruby:2.3.7-jessie-node
  stage: test
  variables:
    RAILS_ENV: test
    APPS_DMR_TEST_SECRET_KEYBASE: 185ce6e80e774d2f2bcbbe94505fe03ff62c32d7efb53ee2050771a734c867d6
    APPS_DMR_STREAMING_KEY: testkeytestkeytestkeytestkey
  script:
    - gem install bundler
    - bundle check --path vendor || bundle install --path vendor --jobs 4 --retry 3
    - bundle exec rubocop
    - bundle exec rake db:migrate
    - bundle exec rspec spec
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby

pontos_deploy:
  extends: .capistrano-deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_KEY_PONTOS
    SSH_SERVER: pontos.ucsd.edu
    SSH_USER: conan
  script:
    - deploy_to "pontos"
    - echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nPontos Deploy Succeeded - $CI_JOB_URL\nsection_end:$( date +%s ):chat_reply\r\033[0K"

staging_deploy:
  extends: .capistrano-deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_KEY_STAGING
    SSH_SERVER: lib-hydrahead-staging.ucsd.edu
    SSH_USER: conan
  script:
    - deploy_to "staging"
    - echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nStaging Deploy Succeeded - $CI_JOB_URL\nsection_end:$( date +%s ):chat_reply\r\033[0K"

production_deploy:
  extends: .capistrano-deploy
  variables:
    SSH_PRIVATE_KEY: $SSH_KEY_PRODUCTION
    SSH_SERVER: lib-hydrahead-prod.ucsd.edu
    SSH_USER: conan
  script:
    - deploy_to "production"
    - echo -e "section_start:$( date +%s ):chat_reply\r\033[0K\nProduction Deploy Succeeded - $CI_JOB_URL\nsection_end:$( date +%s ):chat_reply\r\033[0K"

.deploy_helper: &deploy_helper |
  deploy_to() {
    if test $# -ne 1 ; then
      echo "You must specify an environment to deploy the application to. example: staging"
      exit 1
    fi
    bundle exec cap "$1" deploy
  }

# Template for deploying to various named environments using Capistrano/SSH
.capistrano-deploy:
  image: ruby:2.3.7
  stage: chatops
  only: [chat]
  before_script:
    - *deploy_helper
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan "$SSH_SERVER" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - gem update bundler
    - bundle install --without default development test --jobs 4 --retry 3
